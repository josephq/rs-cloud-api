#!/usr/bin/python
# Copyright 2013 Joseph Quinn
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

import os
import sys
from optparse import OptionParser
import pyrax
import pyrax.exceptions as exc

# Authentication
# Configure credentials/region
# Example creds_file:
#
# [rackspace_cloud]
# username = someuser
# api_key = someapikey
# region = DFW

creds_file = os.path.expanduser("~/.rackspace_cloud_credentials")
try:
  pyrax.set_credential_file(creds_file)
except exc.AuthenticationFailed:
  print 'Failed to authenticate'
  sys.exit(1)

# Create cloudfiles object
cf = pyrax.cloudfiles

# Create container
def create_container(arg):
	try:
	  container = cf.create_container(arg)
	  print "Created", container.name
	except:
	  print "Operation failed."
	  err = sys.exc_info()[0]
	  print err
	  sys.exit(1)

# CDN enable container
def cdn_enable(arg):
	try:
	  cf.make_container_public(arg)
	  print "CDN enabled"
	except:
	  print "Operation failed."
	  err = sys.exc_info()[0]
	  print err
	  sys.exit(1)

# Create and CDN enable container
def create_cdn_container(option, opt, value, parer):
	try:
	  create_container(parser.rargs[0])
	  cdn_enable(parser.rargs[0])
	except:
	  print "Operation failed."
	  err = sys.exc_info()[0]
	  print err
	  sys.exit(1)

# Read CLI arguments
parser = OptionParser()
parser.add_option("-c", "--create-cdn-container", action="callback", callback=create_cdn_container)
(opts, args) = parser.parse_args()
